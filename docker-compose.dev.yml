version: '3.8'

services:
  rdap-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    ports:
      - "8080:8080"
      - "2345:2345"  # delve debugger port
    environment:
      - CONFIG_DIR=/app/config
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
      - CACHE_TTL=60
      - MAX_CONCURRENT_REQUESTS=100
    volumes:
      - .:/app:delegated  # Mount entire project for development
      - go-mod-cache:/go/pkg/mod  # Cache Go modules
    command: ["go", "run", "github.com/cosmtrek/air"]  # Hot reloading
    security_opt:
      - "seccomp=unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - redis

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --save 60 1
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "rdap_tasks:1:1"
    depends_on:
      - zookeeper

networks:
  default:
    driver: bridge

volumes:
  redis_dev_data:
    driver: local
  go-mod-cache:
    driver: local
